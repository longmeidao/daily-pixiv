name: Fetch Pixiv Artwork

on:
  workflow_dispatch:
    inputs:
      artwork_id:
        description: 'Pixiv Artwork ID'
        required: true
        type: string
      exclude_images:
        description: '要排除的图片索引（用逗号分隔，从0开始），例如：0,2,3 表示排除第1、3、4张图片'
        required: false
        type: string
        default: ''

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pixivpy3
          pip install python-dotenv
          pip install requests
          pip install beautifulsoup4
          pip install Pillow
          
      - name: Check directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Creating directories if they don't exist..."
          mkdir -p src/content/images/pixiv
          mkdir -p src/content/pixiv
          
      - name: Run fetch script
        run: python fetch_pixiv.py ${{ github.event.inputs.artwork_id }} "${{ github.event.inputs.exclude_images }}"
        env:
          PIXIV_REFRESH_TOKEN: ${{ secrets.PIXIV_REFRESH_TOKEN }}
          
      - name: Check downloaded files
        run: |
          echo "Checking downloaded files:"
          ls -la src/content/images/pixiv
          ls -la src/content/pixiv
          echo "Checking artwork metadata:"
          if [ -f "src/content/pixiv/${{ github.event.inputs.artwork_id }}.json" ]; then
            cat src/content/pixiv/${{ github.event.inputs.artwork_id }}.json
          else
            echo "Creating empty metadata file..."
            echo '{
              "id": '${{ github.event.inputs.artwork_id }}',
              "title": "Loading...",
              "caption": "",
              "create_date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
              "tags": [],
              "page_count": 0,
              "total_view": 0,
              "total_bookmarks": 0,
              "is_muted": false,
              "author": {
                "id": 0,
                "name": "Loading...",
                "account": "",
                "profile_image_url": ""
              },
              "images": []
            }' > src/content/pixiv/${{ github.event.inputs.artwork_id }}.json
            echo "Created empty metadata file"
          fi

      - name: Upload to OSS
        run: |
          npm install ali-oss
          node scripts/upload-to-oss.js ${{ github.event.inputs.artwork_id }}
        env:
          OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
          OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          OSS_BUCKET: ${{ secrets.OSS_BUCKET }}
          OSS_REGION: ${{ secrets.OSS_REGION }}
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/content/images/pixiv src/content/pixiv
          git status
          git commit -m "chore: update pixiv artwork ${{ github.event.inputs.artwork_id }}" || exit 0
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }} 