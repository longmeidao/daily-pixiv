---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import type { PixivArtwork } from '../types/pixiv';
import tsconfig from '../../tsconfig.json';
import '../styles/artwork.css';
import SpeedInsights from "@vercel/speed-insights/astro"

// 导出 getStaticPaths 函数
export async function getStaticPaths() {
  const pixivCollection = await getCollection('pixiv');
  const artworks: PixivArtwork[] = [];

  // 遍历所有作品目录并按创建日期排序
  for (const artworkDir of pixivCollection) {
    const artworkId = parseInt(artworkDir.id);
    const artworkData = artworkDir.data as unknown as PixivArtwork;
    if (artworkData && artworkData.id) {
      artworks.push({
        ...artworkData,
        id: artworkId
      });
    }
  }

  // 按创建日期排序
  artworks.sort((a, b) => 
    new Date(b.create_date).getTime() - new Date(a.create_date).getTime()
  );

  // 为每个作品生成一个路径，使用索引+1作为order
  return artworks.map((artwork, index) => ({
    params: { order: (index + 1).toString() },
    props: { artwork, sortedArtworks: artworks, currentIndex: index },
  }));
}

// 获取传入的 props
const { artwork, sortedArtworks, currentIndex } = Astro.props;

// 确保所有必要的属性都存在
const artworkData = artwork ? {
  id: artwork.id,
  title: artwork.title,
  images: artwork.images,
  page_count: artwork.page_count,
  tags: artwork.tags,
  author: {
    id: artwork.author.id,
    name: artwork.author.name
  }
} : null;

// 确保图片数组存在
const artworkImages = artworkData?.images || [];

// 计算导航状态
const hasPrev = currentIndex > 0;
const hasNext = currentIndex < sortedArtworks.length - 1;
const prevIndex = hasPrev ? currentIndex - 1 : null;
const nextIndex = hasNext ? currentIndex + 1 : null;

const pageTitle = artworkData ? `${tsconfig.site?.title} - ${artworkData.title}` : tsconfig.site?.title;
---

<Layout title={pageTitle}>
  {/* Logo */}
  <a href="/" class="site-logo">
    <Image 
      src="/se.png"
      alt="Site Logo"
      width={40}
      height={40}
      loading="eager"
      decoding="sync"
    />
  </a>

  <div id="artwork-container" data-artwork={JSON.stringify({
    id: artworkData?.id,
    images: artworkData?.images,
    page_count: artworkData?.page_count
  })}>
    {/* 作品切换按钮 */}
    <div class="artwork-nav-left">
      {hasPrev && prevIndex !== null && (
        <a class="artwork-nav-button" href={`/${prevIndex + 1}`} aria-label="上一个作品">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </a>
      )}
    </div>

    {/* 图片展示区域 */}
    <div id="artwork-viewer">
      <div id="artwork-box">
        <div id="artwork-frame">
          {artworkData ? (
            <div class="artwork-image-wrapper">
              {/* 显示第一张图片 */}
              <div id="main-image-container">
                <Image 
                  src={import(`../content/images/pixiv/${artworkData.id}_1.jpg`)}
                  alt={artworkData.title}
                  width={800}
                  height={600}
                  id="artwork-image"
                  loading="eager"
                  decoding="sync"
                  data-index="1"
                />
              </div>
              {/* 预加载其他图片 */}
              <div id="preloaded-images" style="display: none; height: 0; overflow: hidden; position: absolute;">
                {artworkData.page_count > 1 && Array.from({ length: artworkData.page_count - 1 }).map((_, index) => {
                  const imageIndex = index + 2;
                  return (
                    <Image 
                      src={import(`../content/images/pixiv/${artworkData.id}_${imageIndex}.jpg`)}
                      alt={`${artworkData.title} - ${imageIndex}`}
                      width={800}
                      height={600}
                      id={`artwork-image-${imageIndex}`}
                      loading="eager"
                      decoding="sync"
                      data-index={imageIndex}
                    />
                  );
                })}
              </div>
              {/* 多图切换按钮 */}
              {artworkData?.page_count && artworkData?.page_count > 1 && artworkData?.images?.length > 1 && artworkData?.images?.length === artworkData?.page_count && (
                <div class="artwork-images-nav">
                  <button id="prev-image" aria-label="上一张图片" disabled>
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                  </button>
                  <span id="image-counter">1 / {artworkData?.images?.length}</span>
                  <button id="next-image" aria-label="下一张图片">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </button>
                </div>
              )}
            </div>
          ) : (
            <div>
              <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <p>图片加载失败</p>
              <p>请稍后重试</p>
            </div>
          )}
        </div>
        {/* 作品信息 */}
        <div id="artwork-info">
          <a href={`https://www.pixiv.net/artworks/${artworkData?.id}`} target="_blank" rel="noopener noreferrer">
            <h2>{artworkData?.title}</h2>
          </a>
          <div class="artwork-author">
            <a href={`https://www.pixiv.net/users/${artworkData?.author?.id}`} target="_blank" rel="noopener noreferrer">
              <span>{artworkData?.author?.name}</span>
            </a>
          </div>
          <div class="artwork-tags">
            {artworkData?.tags && artworkData.tags.length > 0 && (
              artworkData.tags.slice(0, 5).map((tag: string) => (
                <a 
                  href={`https://www.pixiv.net/tags/${encodeURIComponent(tag)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  #{tag}
                </a>
              ))
            )}
            {artworkData?.tags && artworkData.tags.length > 5 && (
              <span>+{artworkData.tags.length - 5}</span>
            )}
          </div>
        </div>
      </div>
    </div>

    {/* 作品切换按钮 */}
    <div class="artwork-nav-right">
      {hasNext && nextIndex !== null && (
        <a class="artwork-nav-button" href={`/${nextIndex + 1}`} aria-label="下一个作品">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      )}
    </div>
  </div>

  <script>
    // 等待 DOM 加载完成
    document.addEventListener('DOMContentLoaded', () => {
      import('../components/ArtworkManager').then(({ ArtworkManager }) => {
        new ArtworkManager();
      });
    });
  </script> 
</Layout>

