---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import type { PixivArtwork } from '../types/pixiv';
import tsconfig from '../../tsconfig.json';
import '../styles/artwork.css';
import { getArtworkPath, getOSSPath } from '../lib/oss';

// 获取所有作品并按创建日期排序
const pixivCollection = await getCollection('pixiv');
const artworks: PixivArtwork[] = [];

for (const artworkDir of pixivCollection) {
  const artworkId = parseInt(artworkDir.id);
  const artworkData = artworkDir.data as unknown as PixivArtwork;
  if (artworkData && artworkData.id) {
    artworks.push({
      ...artworkData,
      id: artworkId
    });
  }
}

// 按创建日期倒序排序
artworks.sort((a, b) => 
  new Date(b.create_date).getTime() - new Date(a.create_date).getTime()
);

// 获取最新的作品（排序后的第一个）
const latestArtwork = artworks[0];

// 计算导航状态
const currentOrder = artworks.length;  // 最新作品的 order 是总数
const hasNext = currentOrder > 1;  // 如果有更早的作品
const hasPrev = false;  // 首页是最新的作品，没有更新的作品
const nextOrder = hasNext ? currentOrder - 1 : null;  // 下一个是更早的作品
const prevOrder = null;  // 首页没有上一个作品

// 确保所有必要的属性都存在
const artworkData = latestArtwork ? {
  id: latestArtwork.id,
  title: latestArtwork.title,
  create_date: latestArtwork.create_date,
  images: latestArtwork.images || [],
  page_count: latestArtwork.page_count,
  total_view: latestArtwork.total_view,
  total_bookmarks: latestArtwork.total_bookmarks,
  tags: latestArtwork.tags,
  author: {
    id: latestArtwork.author.id,
    name: latestArtwork.author.name,
    account: latestArtwork.author.account,
    profile_image_url: latestArtwork.author.profile_image_url
  }
} : null;

const siteTitle = tsconfig.site?.title || '色览';
---

<Layout title={siteTitle}>
  {/* Logo */}
  <div class="logo-container">
    <div class="site-logo">
      <a href="/">
        <Image 
          src="/assets/se.png"
          alt="Site Logo"
          width={40}
          height={40}
          loading="eager"
          decoding="sync"
        />
      </a>
      <a href="/about" class="dao-link">
        <Image 
          src="/assets/dao.png"
          alt="About"
          width={40}
          height={40}
          loading="eager"
          decoding="sync"
        />
      </a>
    </div>
  </div>

  {!artworkData ? (
    <div>
      <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      <h3>暂无作品</h3>
      <p>请先运行 GitHub Action 获取作品。获取后将自动显示在这里。</p>
    </div>
  ) : (
    <div id="artwork-container" data-artwork={JSON.stringify({
      id: artworkData.id,
      images: artworkData.images,
      page_count: artworkData.page_count
    })}>
      {/* 作品切换按钮 */}
      <div class="artwork-nav-left">
        {hasPrev && prevOrder !== null && (
          <a class="artwork-nav-button" href={`/${prevOrder}`} aria-label="上一个作品">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </a>
        )}
      </div>
      {/* 图片展示区域 */}
      <div id="artwork-viewer">
        <div id="artwork-box">
          <div id="artwork-frame">
            {artworkData ? (
              <div class="artwork-image-wrapper">
                {/* 显示第一张图片 */}
                <div id="main-image-container">
                  <picture>
                    <source
                      type="image/webp"
                      srcset={getOSSPath(getArtworkPath(artworkData.id.toString(), `${artworkData.id}_1.jpg`, 'webp'))}
                    />
                    <Image 
                      src={getOSSPath(getArtworkPath(artworkData.id.toString(), `${artworkData.id}_1.jpg`))}
                      alt={artworkData.title}
                      id="artwork-image"
                      loading="eager"
                      decoding="sync"
                      data-index="1"
                      width={800}
                      height={600}
                    />
                  </picture>
                </div>
                {/* 预加载其他图片 */}
                <div id="preloaded-images" style="display: none; height: 0; overflow: hidden; position: absolute;">
                  {artworkData.page_count > 1 && Array.from({ length: artworkData.page_count - 1 }).map((_, index) => {
                    const imageIndex = index + 2;
                    return (
                      <picture>
                        <source
                          type="image/webp"
                          srcset={getOSSPath(getArtworkPath(artworkData.id.toString(), `${artworkData.id}_${imageIndex}.jpg`, 'webp'))}
                        />
                        <Image 
                          src={getOSSPath(getArtworkPath(artworkData.id.toString(), `${artworkData.id}_${imageIndex}.jpg`))}
                          alt={`${artworkData.title} - ${imageIndex}`}
                          width={800}
                          height={600}
                          id={`artwork-image-${imageIndex}`}
                          loading="lazy"
                          decoding="async"
                          data-index={imageIndex}
                        />
                      </picture>
                    );
                  })}
                </div>
                {/* 多图切换按钮 */}
                {artworkData?.page_count && artworkData?.page_count > 1 && artworkData?.images?.length > 1 && artworkData?.images?.length === artworkData?.page_count && (
                  <div class="artwork-images-nav">
                    <button id="prev-image" aria-label="上一张图片" disabled>
                      <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                      </svg>
                    </button>
                    <span id="image-counter">1 / {artworkData?.images?.length}</span>
                    <button id="next-image" aria-label="下一张图片">
                      <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                  </div>
                )}
              </div>
            ) : (
              <div>
                <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                <p>图片加载失败</p>
                <p>请稍后重试</p>
              </div>
            )}
          </div>
          {/* 作品信息 */}
          <div id="artwork-info">
            <a href={`https://www.pixiv.net/artworks/${artworkData.id}`} target="_blank" rel="noopener noreferrer">
              <h2>{artworkData.title}</h2>
            </a>
            <div class="artwork-author">
              <a href={`https://www.pixiv.net/users/${artworkData.author.id}`} target="_blank" rel="noopener noreferrer">
                <span>{artworkData.author.name}</span>
              </a>
            </div>
            <div class="artwork-tags">
              {artworkData.tags.slice(0, 5).map((tag: string) => (
                <a 
                  href={`https://www.pixiv.net/tags/${encodeURIComponent(tag)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  #{tag}
                </a>
              ))}
              {artworkData.tags.length > 5 && (
                <span>+{artworkData.tags.length - 5}</span>
              )}
            </div>
          </div>
        </div>
      </div>
      {/* 作品切换按钮 */}
      <div class="artwork-nav-right">
        {hasNext && nextOrder !== null && (
          <a class="artwork-nav-button" href={`/${nextOrder}`} aria-label="下一个作品">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        )}
      </div>
    </div>
  )}

  <script>
    // 等待 DOM 加载完成
    document.addEventListener('DOMContentLoaded', () => {
      import('../components/ArtworkManager').then(({ ArtworkManager }) => {
        new ArtworkManager();
      });
    });
  </script>

</Layout>

